services:
  kelon:
    build: .
    command: run
    restart: always
    networks:
      - compose_network
    ports:
      - "8181:8181"
      - "9191:9191"
    volumes:
      - ./examples/docker-compose/config/:/conf
      - ./examples/docker-compose/call-operands/:/call-operands
      - ./examples/docker-compose/policies/:/policies
    environment:
      - KELON_CONF=/conf/kelon.yml
      - REGO_DIR=/policies
      - CONFIG_WATCHER_PATH=/policies
      - CALL_OPERANDS_DIR=/call-operands

  mysql:
    image: mysql:8
    restart: always
    environment:
      MYSQL_DATABASE: 'appstore'
      MYSQL_USER: 'You'
      MYSQL_PASSWORD: 'SuperSecure'
      MYSQL_ROOT_PASSWORD: 'root-beats-everything'
    networks:
      - compose_network
    ports:
      - '3306:3306'
    volumes:
      - ./examples/docker-compose/init/Init-MySql.sql:/docker-entrypoint-initdb.d/Init-MySql.sql

  postgres:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_DB: 'appstore'
      POSTGRES_USER: 'You'
      POSTGRES_PASSWORD: 'SuperSecure'
    networks:
      - compose_network
    ports:
      - '5432:5432'
    volumes:
      - ./examples/docker-compose/init/Init-Postgres.sql:/docker-entrypoint-initdb.d/Init-Postgres.sql

  mongo:
    image: mongo:6
    restart: always
    networks:
      - compose_network
    ports:
      - "27017-27019:27017-27019"
    environment:
      MONGO_INITDB_ROOT_USERNAME: Root
      MONGO_INITDB_ROOT_PASSWORD: RootPwd
      MONGO_INITDB_DATABASE: appstore
    volumes:
      - ./examples/docker-compose/init/Init-Mongo.js:/docker-entrypoint-initdb.d/init-mongo.js

networks:
  compose_network:
    driver: bridge